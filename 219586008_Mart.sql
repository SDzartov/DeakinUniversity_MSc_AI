CREATE DATABASE Task3;
USE Task3;

CREATE TABLE COUNTRY
	(
    CountryID INTEGER NOT NULL,
    Country VARCHAR(50) NOT NULL,
    CONSTRAINT PK_COUNTRY PRIMARY KEY (CountryID)
    );

CREATE TABLE EMAIL
	(
    EmailID INTEGER NOT NULL,
    Email VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_EMAIL PRIMARY KEY (EmailID),
    CHECK (Email LIKE ("%@%")),
	CHECK (Email LIKE ("%.com"))
    );
    
CREATE TABLE PHONE
	(
    PhoneID INTEGER NOT NULL,
    Phone INTEGER NOT NULL UNIQUE,
    CONSTRAINT PK_PHONE PRIMARY KEY (PhoneID),
    CHECK (Phone>9999999)
    );
    
CREATE TABLE MANAGER
	(
    ManagerID INTEGER NOT NULL,
    Firstname VARCHAR(50) NOT NULL,
    Lastname VARCHAR(50) NOT NULL,
    CONSTRAINT PK_MANAGER PRIMARY KEY (ManagerID)
    );
    
CREATE TABLE PRODUCT
	(
    ProductID INTEGER NOT NULL,
    ProductName VARCHAR(50) NOT NULL,
    Description VARCHAR(50) NOT NULL UNIQUE,
    Quantity INTEGER NOT NULL,
    CONSTRAINT PK_PRODUCT PRIMARY KEY (ProductID)
    );
    
CREATE TABLE ADDRESS
	(
    AddressID INTEGER NOT NULL,
    Street VARCHAR(50) NOT NULL,
    City VARCHAR(50) NOT NULL,
    Region VARCHAR(50) NOT NULL,
    ZIP INTEGER NOT NULL,
    CountryID INTEGER NOT NULL,
    CONSTRAINT PK_ADDRESS PRIMARY KEY (AddressID),
    CONSTRAINT FK_ADDRESS FOREIGN KEY (CountryID) REFERENCES COUNTRY(CountryID),
    CHECK (ZIP >499)
    );

CREATE TABLE CUSTOMER
	(
    CustomerID INTEGER NOT NULL,
    CustomerName VARCHAR(50) NOT NULL,
    AddressID INTEGER NOT NULL,
    EmailID INTEGER NOT NULL,
    CONSTRAINT PK_CUSTOMER PRIMARY KEY (CustomerID),
    CONSTRAINT FK_CUSTOMER1 FOREIGN KEY (AddressID) REFERENCES ADDRESS(AddressID),
    CONSTRAINT FK_CUSTOMER2 FOREIGN KEY (EmailID) REFERENCES EMAIL(EmailID)
    );

CREATE TABLE CUSTOMER_ADDRESS
	(
    AddressID INTEGER NOT NULL,
    CustomerID INTEGER NOT NULL,
    CONSTRAINT FK_CUSTOMER_ADDRESS1 FOREIGN KEY (AddressID) REFERENCES ADDRESS(AddressID),
    CONSTRAINT FK_CUSTOMER_ADDRESS2 FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID)
    );
    
CREATE TABLE TRANSACTION
	(
    CustomerID INTEGER NOT NULL,
    ProductID INTEGER NOT NULL,
    LastTransactionDate DATE,
    CONSTRAINT FK_TRANSACTION1 FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID),
    CONSTRAINT FK_TRANSACTION2 FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID)
    );
    
CREATE TABLE CUSTOMER_PHONE
	(
	PhoneID INTEGER NOT NULL,
    CustomerID INTEGER NOT NULL,
    CONSTRAINT FK_CUSTOMER_PHONE1 FOREIGN KEY (PhoneID) REFERENCES PHONE(PhoneID),
    CONSTRAINT FK_CUSTOMER_PHONE2 FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID)
    );
    
CREATE TABLE SUPPLIER
	(
    SupplierID INTEGER NOT NULL,
    SupplierName VARCHAR(50) NOT NULL,
	AddressID INTEGER NOT NULL,
    EmailID INTEGER NOT NULL,
    PhoneID INTEGER NOT NULL,
    CONSTRAINT PK_SUPPLIER PRIMARY KEY (SupplierID),
    CONSTRAINT FK_SUPPLIER1 FOREIGN KEY (AddressID) REFERENCES ADDRESS(AddressID),
    CONSTRAINT FK_SUPPLIER2 FOREIGN KEY (EmailID) REFERENCES EMAIL(EmailID),
    CONSTRAINT FK_SUPPLIER3 FOREIGN KEY (PhoneID) REFERENCES PHONE(PhoneID)
    );
    
CREATE TABLE PURCHASE_ORDER
	(
    OrderNumber INTEGER NOT NULL,
    OrderDate DATE NOT NULL,
    ArrivalDate DATE, 
    SupplierID INTEGER NOT NULL,
	QuantityOrdered INTEGER NOT NULL,
	ManagerID INTEGER NOT NULL,
    CONSTRAINT PK_PURCHASE_ORDER PRIMARY KEY (OrderNumber),
    CONSTRAINT FK_PURCHASE_ORDER1 FOREIGN KEY (SupplierID) REFERENCES SUPPLIER(SupplierID),
    CONSTRAINT FK_PURCHASE_ORDER2 FOREIGN KEY (ManagerID) REFERENCES MANAGER(ManagerID),
    CHECK (QuantityOrdered > 0)
    );
    
CREATE TABLE PURCHASED_ITEM
	(
    OrderNumber INTEGER NOT NULL,
    ProductID INTEGER NOT NULL,
	QuantityOrdered INTEGER NOT NULL,
	UnitCost FLOAT NOT NULL,
    CONSTRAINT FK_PURCHASED_ITEM1 FOREIGN KEY (OrderNumber) REFERENCES PURCHASE_ORDER(OrderNumber),
    CONSTRAINT FK_PURCHASED_ITEM2 FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID),
    CHECK (UnitCost > 0)
    );

/* INSERTING DUMMY DATA */

INSERT INTO COUNTRY(CountryID,Country) VALUES (1,"China");
INSERT INTO COUNTRY(CountryID,Country) VALUES (2,"India");

INSERT INTO ADDRESS(AddressID,Street,City,Region,ZIP,CountryID) VALUES (1,"James Street","XYZ","XYZ",2345,1);
INSERT INTO ADDRESS(AddressID,Street,City,Region,ZIP,CountryID) VALUES (2,"Match Street","ZXY","ZXY",4576,1);
INSERT INTO ADDRESS(AddressID,Street,City,Region,ZIP,CountryID) VALUES (3,"Set Street","YXZ","YXZ",2345,2);
INSERT INTO ADDRESS(AddressID,Street,City,Region,ZIP,CountryID) VALUES (4,"Grove Street","ZZZ","ZZZ",9999,1);
INSERT INTO ADDRESS(AddressID,Street,City,Region,ZIP,CountryID) VALUES (5,"Merry Street","XXX","XXX",777,2);
INSERT INTO ADDRESS(AddressID,Street,City,Region,ZIP,CountryID) VALUES (6,"Mount Street","YYY","YYY",888,2);

INSERT INTO EMAIL(EmailID,Email) VALUES (1,"email1@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (2,"email2@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (3,"email3@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (4,"email4@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (5,"email5@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (6,"email6@gmail.com");

INSERT INTO PHONE(PhoneID,Phone) VALUES (1,98095674);
INSERT INTO PHONE(PhoneID,Phone) VALUES (2,48095674);
INSERT INTO PHONE(PhoneID,Phone) VALUES (3,58095674);
INSERT INTO PHONE(PhoneID,Phone) VALUES (4,73546736);
INSERT INTO PHONE(PhoneID,Phone) VALUES (5,63583964);
INSERT INTO PHONE(PhoneID,Phone) VALUES (6,64547392);

INSERT INTO CUSTOMER(CustomerID,CustomerName,AddressID,EmailID) VALUES (1,"Jonny Knox",4,4);
INSERT INTO CUSTOMER(CustomerID,CustomerName,AddressID,EmailID) VALUES (2,"Sam Porter",5,5);
INSERT INTO CUSTOMER(CustomerID,CustomerName,AddressID,EmailID) VALUES (3,"Hansa Gorg",6,6);

INSERT INTO CUSTOMER_ADDRESS(AddressID,CustomerID) VALUES (4,1);
INSERT INTO CUSTOMER_ADDRESS(AddressID,CustomerID) VALUES (5,2);
INSERT INTO CUSTOMER_ADDRESS(AddressID,CustomerID) VALUES (6,3);

INSERT INTO CUSTOMER_PHONE(PhoneID,CustomerID) VALUES (1,1);
INSERT INTO CUSTOMER_PHONE(PhoneID,CustomerID) VALUES (2,2);
INSERT INTO CUSTOMER_PHONE(PhoneID,CustomerID) VALUES (3,3);

INSERT INTO MANAGER(ManagerID,FirstName,LastName) VALUES (1,"Shane","Master");
INSERT INTO MANAGER(ManagerID,FirstName,LastName) VALUES (2,"John","James");
INSERT INTO MANAGER(ManagerID,FirstName,LastName) VALUES (3,"Fin","Saber");

INSERT INTO PRODUCT(ProductID,ProductName,Description,Quantity) VALUES (1,"Hammer","Brand: X",12);
INSERT INTO PRODUCT(ProductID,ProductName,Description,Quantity) VALUES (2,"Hammer","Brand: Y",9);
INSERT INTO PRODUCT(ProductID,ProductName,Description,Quantity) VALUES (3,"Engine","Brand: T",3);

INSERT INTO SUPPLIER(SupplierID,SupplierName,AddressID,EmailID,PhoneID) VALUES (1,"BIZ1",1,1,1);
INSERT INTO SUPPLIER(SupplierID,SupplierName,AddressID,EmailID,PhoneID) VALUES (2,"BIZ2",2,2,2);
INSERT INTO SUPPLIER(SupplierID,SupplierName,AddressID,EmailID,PhoneID) VALUES (3,"BIZ3",3,3,3);

INSERT INTO PURCHASE_ORDER(OrderNumber,OrderDate,ArrivalDate,SupplierID,QuantityOrdered,ManagerID) VALUES (1,20201102,2020121,1,10,1);
INSERT INTO PURCHASE_ORDER(OrderNumber,OrderDate,ArrivalDate,SupplierID,QuantityOrdered,ManagerID) VALUES (2,20201115,20201215,2,10,2);
INSERT INTO PURCHASE_ORDER(OrderNumber,OrderDate,ArrivalDate,SupplierID,QuantityOrdered,ManagerID) VALUES (3,20201102,NULL,3,10,2);

INSERT INTO PURCHASED_ITEM(OrderNumber,ProductID,QuantityOrdered,UnitCost) VALUES (1,1,20,10);
INSERT INTO PURCHASED_ITEM(OrderNumber,ProductID,QuantityOrdered,UnitCost) VALUES (2,2,10,150);
INSERT INTO PURCHASED_ITEM(OrderNumber,ProductID,QuantityOrdered,UnitCost) VALUES (3,3,5,100);

INSERT INTO TRANSACTION(CustomerID,ProductID,LastTransactionDate) VALUES (1,1,20201102);
INSERT INTO TRANSACTION(CustomerID,ProductID,LastTransactionDate) VALUES (2,2,20201115);
INSERT INTO TRANSACTION(CustomerID,ProductID,LastTransactionDate) VALUES (3,3,20201102);
INSERT INTO TRANSACTION(CustomerID,ProductID,LastTransactionDate) VALUES (1,3,NULL);
  
/* TESTING DUMMY DATA */

SELECT * FROM ADDRESS;
SELECT * FROM COUNTRY;
SELECT * FROM CUSTOMER;
SELECT * FROM CUSTOMER_ADDRESS;
SELECT * FROM CUSTOMER_PHONE;
SELECT * FROM EMAIL;
SELECT * FROM MANAGER;
SELECT * FROM PHONE;
SELECT * FROM PRODUCT;
SELECT * FROM PURCHASE_ORDER;
SELECT * FROM PURCHASED_ITEM;
SELECT * FROM SUPPLIER;
SELECT * FROM TRANSACTION;

/* Question 1: List all purchase orders managed by a specific manager. */

SELECT po.OrderNumber,po.OrderDate,po.SupplierID,m.ManagerID,m.FirstName,m.LastName 
FROM PURCHASE_ORDER AS po
INNER JOIN MANAGER AS m
	ON PO.ManagerID = m.ManagerID
WHERE m.ManagerID = 2;

/* Question 2: List all purchase orders that list a specific product. */

SELECT po.OrderNumber,po.OrderDate,p.ProductID,po.QuantityOrdered,ProductName,p.Description
FROM PURCHASE_ORDER AS po
INNER JOIN PURCHASED_ITEM AS i
	ON po.OrderNumber = i.OrderNumber
INNER JOIN PRODUCT AS p
	ON i.ProductID = p.ProductID
WHERE p.ProductID = 2;

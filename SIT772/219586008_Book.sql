CREATE DATABASE Task2;
USE Task2;
CREATE TABLE ISBN_PUBLISHER
	(
    PublisherID INTEGER NOT NULL,
    Publisher VARCHAR(50) NOT NULL,
    CONSTRAINT PK_ISBN_PUBLISHER PRIMARY KEY (PublisherID)
    );
    
CREATE TABLE BOOK_AUTHORS
	(
    AuthID INTEGER NOT NULL,
    AuthorName VARCHAR(50) NOT NULL,
    CONSTRAINT PK_BOOK_AUTHORS PRIMARY KEY (AuthID)
    );
    
CREATE TABLE EMAIL
	(
    EmailID INTEGER NOT NULL,
    Email VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_EMAIL PRIMARY KEY (EmailID)
    );
    
CREATE TABLE PHONE
	(
    PhoneID INTEGER NOT NULL,
    Phone INTEGER NOT NULL UNIQUE,
    CONSTRAINT PK_PHONE PRIMARY KEY (PhoneID)
    );

CREATE TABLE BOOK
  (
    ISBN INTEGER NOT NULL,
    Title VARCHAR(50) NOT NULL,
    Volume INTEGER NOT NULL,
    Year Year NOT NULL,
    PublisherID INTEGER NOT NULL,
    CONSTRAINT PK_BOOK PRIMARY KEY (ISBN),
    CONSTRAINT FK1_BOOK FOREIGN KEY (PublisherID) REFERENCES ISBN_PUBLISHER(PublisherID),
    CONSTRAINT UK1_BOOK UNIQUE (Title,Volume,Year,PublisherID)
    );
    
CREATE TABLE BOOK_AUTHORID
	(
    ISBN INTEGER NOT NULL,
    AuthID INTEGER NOT NULL,
    CONSTRAINT FK1_BOOK_AUTHORDID FOREIGN KEY (ISBN) REFERENCES BOOK(ISBN),
    CONSTRAINT FK2_BOOK_AUTHORDID FOREIGN KEY (AuthID) REFERENCES BOOK_AUTHORS(AuthID)
    );
    
CREATE TABLE CATALOGUE
	(
    BookID INTEGER NOT NULL,
    ISBN INTEGER NOT NULL,
    CONSTRAINT PK_CATALOGUE PRIMARY KEY (BookID),
    CONSTRAINT FK1_CATALOGUE FOREIGN KEY (ISBN) REFERENCES BOOK(ISBN)
    );
    
CREATE TABLE USER
	(
    UserID INTEGER NOT NULL,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (UserID)
    );

CREATE TABLE USER_EMAIL
	(
    UserID INTEGER NOT NULL,
    EmailID INTEGER NOT NULL,
	CONSTRAINT FK1_USER_EMAIL FOREIGN KEY (UserID) REFERENCES USER(UserID),
	CONSTRAINT FK2_USER_EMAIL FOREIGN KEY (EmailID) REFERENCES EMAIL(EmailID)
	);
    
CREATE TABLE USER_PHONE
	(
    UserID INTEGER NOT NULL,
    PhoneID INTEGER NOT NULL,
	CONSTRAINT FK1_USER_PHONE FOREIGN KEY (UserID) REFERENCES USER(UserID),
	CONSTRAINT FK2_USER_PHONE FOREIGN KEY (PhoneID) REFERENCES PHONE(PhoneID)
	);

CREATE TABLE BORROW
  (
    BorrowID INTEGER NOT NULL,
    BookID INTEGER NOT NULL,
    UserID INTEGER NOT NULL,
    BorrowDate DATE NOT NULL,
    ReturnDate DATE,
    CONSTRAINT PK_BORROW PRIMARY KEY (BorrowID),
    CONSTRAINT FK1_BORROW FOREIGN KEY (BookID) REFERENCES CATALOGUE(BookID),
    CONSTRAINT FK2_BORROW FOREIGN KEY (UserID) REFERENCES USER(UserID),
    CONSTRAINT CHK_RETURN_DATE CHECK (ReturnDate >= BorrowDate)
    );

CREATE TABLE FINES_REASON
	(
    ReasonID INTEGER NOT NULL,
    Reason VARCHAR(50) NOT NULL UNIQUE,
    Amount FLOAT NOT NULL,
    CONSTRAINT PK_FINES_REASON PRIMARY KEY (ReasonID)
    );

CREATE TABLE FINES
	(
    BorrowID INTEGER NOT NULL,
    ReasonID INTEGER NOT NULL,
	CONSTRAINT FK1_FINES FOREIGN KEY (BorrowID) REFERENCES BORROW(BorrowID),
	CONSTRAINT FK2_FINES FOREIGN KEY (ReasonID) REFERENCES FINES_REASON(ReasonID)
	);
    
/* INSERTING DUMMY DATA */

INSERT INTO ISBN_PUBLISHER(PublisherID,Publisher) VALUES (1,"SCIFI");
INSERT INTO ISBN_PUBLISHER(PublisherID,Publisher) VALUES (2,"UDEMY");
INSERT INTO ISBN_PUBLISHER(PublisherID,Publisher) VALUES (3,"MICROSOFT");

INSERT INTO BOOK(ISBN,Title,Volume,Year,PublisherID) VALUES (1,'SQL',1,2010,1);
INSERT INTO BOOK(ISBN,Title,Volume,Year,PublisherID) VALUES (2,'HTML',1,2015,2);
INSERT INTO BOOK(ISBN,Title,Volume,Year,PublisherID) VALUES (3,'HTML',2,2016,2);
INSERT INTO BOOK(ISBN,Title,Volume,Year,PublisherID) VALUES (4,'PYTHON',1,2012,3);
INSERT INTO BOOK(ISBN,Title,Volume,Year,PublisherID) VALUES (5,'PYTHON',2,2013,3);

INSERT INTO BOOK_AUTHORS(AuthID,AuthorName) VALUES (1,'Sam Jones');
INSERT INTO BOOK_AUTHORS(AuthID,AuthorName) VALUES (2,'Mark Hammond');
INSERT INTO BOOK_AUTHORS(AuthID,AuthorName) VALUES (3,'Shane Richard');

INSERT INTO BOOK_AUTHORID(ISBN,AuthID) VALUES (1,1);
INSERT INTO BOOK_AUTHORID(ISBN,AuthID) VALUES (2,2);
INSERT INTO BOOK_AUTHORID(ISBN,AuthID) VALUES (3,2);
INSERT INTO BOOK_AUTHORID(ISBN,AuthID) VALUES (4,3);
INSERT INTO BOOK_AUTHORID(ISBN,AuthID) VALUES (5,3);

INSERT INTO CATALOGUE(BookID,ISBN) VALUES (1,1);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (2,1);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (3,2);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (4,2);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (5,3);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (6,3);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (7,4);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (8,4);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (9,4);
INSERT INTO CATALOGUE(BookID,ISBN) VALUES (10,5);

INSERT INTO USER(UserID,FirstName,LastName) VALUES (1,"Shane","Dzartov");
INSERT INTO USER(UserID,FirstName,LastName) VALUES (2,"Jack","Ko");
INSERT INTO USER(UserID,FirstName,LastName) VALUES (3,"Maz","Tologi");

INSERT INTO BORROW(BorrowID,BookID,UserID,BorrowDate,ReturnDate) VALUES (1,1,1,'2020-12-01','2020-12--22');
INSERT INTO BORROW(BorrowID,BookID,UserID,BorrowDate,ReturnDate) VALUES (2,2,2,'2020-11-01',NULL);
INSERT INTO BORROW(BorrowID,BookID,UserID,BorrowDate,ReturnDate) VALUES (3,3,3,'2020-12-05',NULL);
INSERT INTO BORROW(BorrowID,BookID,UserID,BorrowDate,ReturnDate) VALUES (4,6,3,'2020-12-10','2020-12-17');

INSERT INTO EMAIL(EmailID,Email) VALUES (1,"student1@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (2,"student2@gmail.com");
INSERT INTO EMAIL(EmailID,Email) VALUES (3,"student3@gmail.com");

INSERT INTO FINES_REASON(ReasonID,Reason,Amount) VALUES (1,"Late",25.00);
INSERT INTO FINES_REASON(ReasonID,Reason,Amount) VALUES (2,"Damaged",50.00);
INSERT INTO FINES_REASON(ReasonID,Reason,Amount) VALUES (3,"Lost",100.00);

INSERT INTO FINES(BorrowID,ReasonID) VALUES (2,3);
INSERT INTO FINES(BorrowID,ReasonID) VALUES (3,1);
INSERT INTO FINES(BorrowID,ReasonID) VALUES (4,2);

INSERT INTO PHONE(PhoneID,Phone) VALUES (1,98902438);
INSERT INTO PHONE(PhoneID,Phone) VALUES (2,56468890);
INSERT INTO PHONE(PhoneID,Phone) VALUES (3,98907643);

INSERT INTO USER_EMAIL(UserID,EmailID) VALUES (1,1);
INSERT INTO USER_EMAIL(UserID,EmailID) VALUES (2,2);
INSERT INTO USER_EMAIL(UserID,EmailID) VALUES (3,3);

INSERT INTO USER_PHONE(UserID,PhoneID) VALUES (1,1);
INSERT INTO USER_PHONE(UserID,PhoneID) VALUES (2,2);
INSERT INTO USER_PHONE(UserID,PhoneID) VALUES (3,2);

/* TESTING DUMMY DATA */

SELECT * FROM USER;
SELECT * FROM FINES;
SELECT * FROM BOOK;
SELECT * FROM BORROW;
SELECT * FROM BOOK_AUTHORID;
SELECT * FROM BOOK_AUTHORS;
SELECT * FROM CATALOGUE;
SELECT * FROM EMAIL;
SELECT * FROM FINES_REASON;
SELECT * FROM PHONE;
SELECT * FROM USER_EMAIL;
SELECT * FROM USER_PHONE;

/* QUESTIONS */

/* Show Users who have Fines, ordered by Fines.*/
SELECT b.BorrowID,r.Reason,r.Amount,u.FirstName,u.LastName
FROM USER AS u
INNER JOIN BORROW AS B 
	ON b.UserID = u.UserID
INNER JOIN FINES AS f 
	ON f.BorrowID = b.BorrowID
INNER JOIN FINES_REASON AS r
	ON r.ReasonID = f.ReasonID
GROUP BY u.UserID
ORDER BY f.BorrowID;

/* List all Books, ordered by Publisher and Publisher Year.*/
SELECT c.BookID, b.Title, b.Year, p.Publisher
FROM CATALOGUE AS C
INNER JOIN Book AS b
	ON b.ISBN = c.ISBN
INNER JOIN ISBN_PUBLISHER AS p
	ON p.PublisherID = b.PublisherID
ORDER BY b.Year, p.Publisher;